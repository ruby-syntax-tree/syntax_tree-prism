#!/usr/bin/env ruby
# frozen_string_literal: true

require "bundler/setup"

$:.unshift(File.expand_path("../lib", __dir__))
require "syntax_tree/prism"

END {
  failures = DATA.readlines(chomp: true)
  delimiter = /%(?: # (.+?))?\n/

  Dir[File.expand_path("../fixtures/*.rb", __dir__)].each do |filepath|
    File
      .readlines(filepath)
      .slice_before(delimiter)
      .each_with_index do |source, index|
        source, formatted = source.tap(&:shift).join.split("-\n")
        formatted ||= source

        actual = Prism.parse(source).format
        name = "#{File.basename(filepath)}:#{index}"

        if actual != formatted
          if failures.include?(name)
            failures.delete(name)
          else
            failures << name
          end
        end
      end
  end

  puts failures
}

__END__
assoc.rb:1
assoc.rb:8
bare_assoc_hash.rb:4
brace_block.rb:1
break.rb:9
call.rb:7
call.rb:8
call.rb:9
call.rb:10
call.rb:11
call.rb:15
call.rb:16
command_call.rb:2
command_call.rb:3
command_call.rb:4
command_call.rb:7
command_call.rb:9
command_call.rb:10
command_call.rb:11
def.rb:6
def_endless.rb:9
defined.rb:2
do_block.rb:2
do_block.rb:4
dyna_symbol.rb:0
dyna_symbol.rb:4
elsif.rb:0
elsif.rb:3
embdoc.rb:0
embdoc.rb:1
end_content.rb:0
heredoc.rb:17
heredoc.rb:18
if.rb:3
if.rb:7
if.rb:10
if.rb:13
ifop.rb:1
ifop.rb:3
label.rb:1
lambda.rb:18
lambda.rb:19
next.rb:19
not.rb:3
not.rb:5
params.rb:34
regexp_literal.rb:1
regexp_literal.rb:2
regexp_literal.rb:3
regexp_literal.rb:4
regexp_literal.rb:12
regexp_literal.rb:17
regexp_literal.rb:18
return.rb:9
return.rb:12
statements.rb:0
string_concat.rb:0
string_embexpr.rb:5
string_literal.rb:15
string_literal.rb:16
unless.rb:7
unless.rb:8
when.rb:7
when.rb:8
